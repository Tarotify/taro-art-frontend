[{"E:\\Github_Micro\\taro-art-frontend\\src\\App.js":"1","E:\\Github_Micro\\taro-art-frontend\\src\\reportWebVitals.js":"2","E:\\Github_Micro\\taro-art-frontend\\src\\pages\\index\\index.jsx":"3","E:\\Github_Micro\\taro-art-frontend\\src\\utils\\var.js":"4","E:\\Github_Micro\\taro-art-frontend\\src\\utils\\tools.js":"5","E:\\Github_Micro\\taro-art-frontend\\src\\pages\\user\\login.jsx":"6","E:\\Github_Micro\\taro-art-frontend\\src\\pages\\user\\reg.jsx":"7","E:\\Github_Micro\\taro-art-frontend\\src\\pages\\user\\forgetpw.jsx":"8","E:\\Github_Micro\\taro-art-frontend\\src\\pages\\oauth\\loading.jsx":"9","E:\\Github_Micro\\taro-art-frontend\\src\\api\\oauth\\index.js":"10","E:\\Github_Micro\\taro-art-frontend\\src\\utils\\request.js":"11","E:\\Github_Micro\\taro-art-frontend\\src\\index.js":"12","E:\\Github_Micro\\taro-art-frontend\\src\\pages\\user\\regbind.jsx":"13","E:\\Github_Micro\\taro-art-frontend\\src\\pages\\404\\index.jsx":"14","E:\\Github_Micro\\taro-art-frontend\\src\\api\\user\\index.js":"15"},{"size":984,"mtime":1611701890721,"results":"16","hashOfConfig":"17"},{"size":362,"mtime":1611204567129,"results":"18","hashOfConfig":"17"},{"size":2283,"mtime":1612120895172,"results":"19","hashOfConfig":"17"},{"size":168,"mtime":1611290934262,"results":"20","hashOfConfig":"17"},{"size":5211,"mtime":1611854782211,"results":"21","hashOfConfig":"17"},{"size":8521,"mtime":1612109928711,"results":"22","hashOfConfig":"17"},{"size":10589,"mtime":1612108873564,"results":"23","hashOfConfig":"17"},{"size":8721,"mtime":1612108520326,"results":"24","hashOfConfig":"17"},{"size":1805,"mtime":1611705382325,"results":"25","hashOfConfig":"17"},{"size":311,"mtime":1611617057554,"results":"26","hashOfConfig":"17"},{"size":2663,"mtime":1612038113838,"results":"27","hashOfConfig":"17"},{"size":500,"mtime":1611204567129,"results":"28","hashOfConfig":"17"},{"size":8026,"mtime":1612066098241,"results":"29","hashOfConfig":"17"},{"size":485,"mtime":1611704825371,"results":"30","hashOfConfig":"17"},{"size":783,"mtime":1612069227263,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"9e11n7",{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"43"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\Github_Micro\\taro-art-frontend\\src\\App.js",["67"],"E:\\Github_Micro\\taro-art-frontend\\src\\reportWebVitals.js",[],["68","69"],"E:\\Github_Micro\\taro-art-frontend\\src\\pages\\index\\index.jsx",[],"E:\\Github_Micro\\taro-art-frontend\\src\\utils\\var.js",[],"E:\\Github_Micro\\taro-art-frontend\\src\\utils\\tools.js",[],["70","71"],"E:\\Github_Micro\\taro-art-frontend\\src\\pages\\user\\login.jsx",["72"],"import React, {useState, useEffect} from 'react'\r\nimport { Tools, Storage } from '../../utils/tools'\r\nimport './login.less'\r\nimport google from '../../asset/img/logo_google.png'\r\nimport github from '../../asset/img/logo_github.png'\r\nimport { Divider, Form, Input, Button, message } from 'antd'\r\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { userLogin } from '../../api/user'\r\n\r\n\r\nexport default function Login() {\r\n    const [initGoogle, setInitGoole] = useState(false)\r\n    const [loginStatus, setLogInStatus] = useState(false)\r\n    const history = useHistory()\r\n\r\n    // 登录状态改变 开始监听storage\r\n    useEffect(() => {\r\n      if(loginStatus) {\r\n        const githubOauthIntervel = setInterval(() => {\r\n          const result = Storage.getLocal('taro_user_verify')\r\n          if (result !== null) {\r\n            console.log('验证通过将跳转....')\r\n            // 不同的user_verify 挑转不同的地方\r\n            if(result.user_verify === 0) {\r\n              // 引导去填email\r\n              history.push('/user/reg/bindemail')\r\n            }\r\n            if(result.user_verify === 99) {\r\n              // 登录成功， 存token\r\n              Tools.setToken(result.token)\r\n              message.success('登录成功', 2, history.push('/'));\r\n            }\r\n          }\r\n        }, 1500);\r\n        return () => {\r\n          clearInterval(githubOauthIntervel)\r\n        }\r\n      }else{\r\n        return null\r\n      }\r\n    }, [loginStatus])\r\n\r\n    useEffect(() => {\r\n      const showGoogleAuth = (GoogleAuth) => {\r\n        if (typeof GoogleAuth === 'undefined') return\r\n        //GoogleAuth.attachClickHandler(container, options, onsuccess, onfailure)\r\n         GoogleAuth.attachClickHandler(document.getElementById('signin-google'), {}, function(googleUser) {\r\n           // 前端自己的回调函数，拿到授权后的googleuser信息向后端发送信息\r\n           handleGoogleCallback(googleUser.getAuthResponse().id_token)\r\n         }, function(err) {\r\n            console.log('验证取消')\r\n            console.log(err)\r\n         }\r\n         )\r\n    }\r\n  \r\n  \r\n      // 还没生成googleAuth\r\n      if (typeof window.GoogleAuth === 'undefined') {\r\n        Tools.initGoogleAuth((GoogleAuth) => {\r\n          showGoogleAuth(GoogleAuth)\r\n          setInitGoole(true)\r\n        })\r\n      }else{\r\n        showGoogleAuth(window.GoogleAuth)\r\n      }\r\n    }, [])\r\n   \r\n    const handleGoogleCallback = token => {\r\n      // 调后端接口，把token传给后端，后端再用token来向google验证\r\n      // dispatch({\r\n      //   type:'user/loginGoogle',\r\n      //   payload: {\r\n      //     token: token,\r\n      //   }\r\n      // }).then(res => {\r\n      //   console.log(res)\r\n      // })\r\n      console.log(token)\r\n    }\r\n  \r\n    const onGooleClick = (e) => {\r\n      if(initGoogle === false) {\r\n        console.log('google登录初始化失败')\r\n        return\r\n      }\r\n    }\r\n  \r\n    const onGithubClick = (e) => {\r\n      const iHeight = 600\r\n      const iWidth = 700\r\n      const iTop = (window.screen.availHeight-30-iHeight)/2; //获得窗口的垂直位置;\r\n      const iLeft = (window.screen.availWidth-10-iWidth)/2; //获得窗口的水平位置;\r\n      // 登录开新窗口\r\n      window.open(Tools.initGithubAuth(), \"\", `top=${iTop}, left=${iLeft} height=${iHeight}, width=${iWidth}`)\r\n      // 推进状态开始监听localStroge里的验证值\r\n      setLogInStatus(true)\r\n    }\r\n\r\n    // useEffect(() => {\r\n    //   window.addEventListener('message', (event) => {\r\n    //     if(event.origin === 'http://localhost:3000') {\r\n    //       console.log(event.data)\r\n    //     }\r\n    //   })\r\n    // }, [])\r\n\r\n    const onFinish = (values) => {\r\n      userLogin(values).then(res => {\r\n        if(res.status_code === 200) {\r\n          Tools.setToken(res.data.token)\r\n          message.success('登录成功', 2,  history.push('/'));\r\n        }\r\n        if(res.status_code === 400 ){\r\n          message.warning('该邮箱未注册', 4);\r\n          return null\r\n        }\r\n        if(res.status_code === 401 ){\r\n          message.warning('密码不正确', 4);\r\n          return null\r\n        }\r\n      })\r\n        console.log('Received values of form: ', values);\r\n    };\r\n\r\n    return(\r\n        <React.Fragment>\r\n            <div className=\"loginWrapper\">\r\n                <div className=\"login_title\">\r\n                    <h2>\r\n                        <strong>Login Account</strong>\r\n                    </h2>\r\n                    <div className=\"login_title_des\">Your are the next artist!</div>\r\n                </div>\r\n                <div className=\"login_content\">\r\n                    <div className=\"loginFormWrapper\">\r\n                        <Form\r\n                            name=\"normal_login\"\r\n                            className=\"login-form\"\r\n                            initialValues={{\r\n                                remember: true,\r\n                            }}\r\n                            onFinish={onFinish}\r\n                            >\r\n                            <Form.Item\r\n                                name=\"email\"\r\n                                hasFeedback\r\n                                rules={[\r\n                                    {\r\n                                        required: true,\r\n                                        message: 'Please input your email!',\r\n                                    },\r\n                                    {\r\n                                        type: 'email',\r\n                                        message: 'Please input correct email format!',\r\n                                    }\r\n                                ]}\r\n                            >\r\n                                <Input prefix={<UserOutlined className=\"site-form-item-icon\" />} size=\"large\" placeholder=\"邮箱\" />\r\n                            </Form.Item>\r\n                            <Form.Item\r\n                                name=\"password\"\r\n                                rules={[\r\n                                {\r\n                                    required: true,\r\n                                    message: 'Please input your Password!',\r\n                                },\r\n                                {\r\n                                    whitespace: true,\r\n                                    message: 'Password cannot contain space!',\r\n                                },\r\n                                {\r\n                                    min: 6,\r\n                                    message: 'Password should be at least 6 characters',\r\n                                },\r\n                                ]}\r\n                                hasFeedback\r\n                            >\r\n                                <Input\r\n                                prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n                                type=\"password\"\r\n                                placeholder=\"密码\"\r\n                                size=\"large\"\r\n                                />\r\n                            </Form.Item>\r\n                            <Form.Item>\r\n                                <Link className=\"login-form-forgot\" to=\"/user/forgetpassword\">\r\n                                     Forgot password?\r\n                                </Link>\r\n                                <Button type=\"primary\" shape=\"round\"  size='large'  htmlType=\"submit\" className=\"login-form-button\">\r\n                                Log in\r\n                                </Button>\r\n                            </Form.Item>\r\n                        </Form>\r\n                    </div>\r\n                    <Divider plain><span className=\"thridPatry_title\">或者使用第三方账号登录</span></Divider>\r\n                    <div className=\"thridPatryWrapper\">\r\n                        <div className=\"signinGoogle\" id=\"signin-google\" onClick={e => onGooleClick(e)}><img className=\"google\" src={google} alt=\"google\"></img>Google 登录</div>\r\n                        <div className=\"signinGoogle\"  onClick={e => onGithubClick(e)}><img className=\"google\" src={github} alt=\"github\"></img>Github 登录</div>\r\n                    </div>\r\n                    <div className=\"toRegister\">\r\n                        还没有账号？<Link to=\"/user/reg\">点击加入Taro大家庭</Link>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n}","E:\\Github_Micro\\taro-art-frontend\\src\\pages\\user\\reg.jsx",["73"],"E:\\Github_Micro\\taro-art-frontend\\src\\pages\\user\\forgetpw.jsx",[],"E:\\Github_Micro\\taro-art-frontend\\src\\pages\\oauth\\loading.jsx",["74"],"import { Spin, Alert } from 'antd';\r\nimport { LoadingOutlined } from '@ant-design/icons';\r\nimport './loading.less'\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { useEffect, useState } from 'react';\r\nimport { githubCodeAuth } from '../../api/oauth/index'\r\nimport { Storage } from '../../utils/tools'\r\n\r\nexport default function Oauthloading() {\r\n    const antIcon = <LoadingOutlined style={{ fontSize: 60 }} spin />\r\n    const param =  useLocation().search\r\n    const [code, setcode] = useState('')\r\n\r\n    // 从url拿到code\r\n    useEffect(() => {\r\n        if(param !== undefined) {\r\n            let searchParams = new URLSearchParams (param)\r\n            setcode(searchParams.get(\"code\"))\r\n        }\r\n    },[param])\r\n\r\n    // 拿code去后端验证\r\n    useEffect(() => {\r\n        if(code !== '') {\r\n            console.log(code)\r\n            // window.close()   \r\n            const data ={ code }\r\n            githubCodeAuth(data).then(res => {\r\n                console.log(res)\r\n                if(res.status_code === 200) {\r\n                    // if(res.data.user_verify ==) {\r\n                        // 更新storage\r\n                        Storage.setLocal('taro_user_verify', res.data)\r\n                        window.close()\r\n                    // }\r\n                }\r\n            })\r\n        }\r\n    },[code])\r\n\r\n\r\n    return(\r\n        <div className=\"loadingWrapper\">\r\n            <div className=\"loading\">\r\n            {/* <Spin indicator={antIcon}  > */}\r\n            <Spin tip=\"loading....\">\r\n                <Alert\r\n                message=\"Github Account Validating\"\r\n                description=\"It will finish in a second, thank you for join in the family.\"\r\n                type=\"info\"\r\n                />\r\n            </Spin>\r\n            </div>\r\n        </div>\r\n    )\r\n}","E:\\Github_Micro\\taro-art-frontend\\src\\api\\oauth\\index.js",[],"E:\\Github_Micro\\taro-art-frontend\\src\\utils\\request.js",["75"],"import axios from 'axios'\r\nimport { message } from 'antd'\r\n\r\n// 用户token\r\n// const token = ''\r\n\r\naxios.defaults.timeout = 100000;\r\naxios.defaults.baseURL = \"http://localhost:5000/api/\";\r\naxios.defaults.withCredentials = true  // nodejs和vue启动的端口不同，所以使用了cors跨域，影响了cookie的设置。 \r\n                                      // 解决浏览器set-cookie显示有内容，但没写入cookie\r\n/**\r\n * http request 拦截器\r\n */\r\n\r\naxios.interceptors.request.use(\r\n    (config) => {\r\n      config.data = JSON.stringify(config.data);\r\n      // 还没对formData处理\r\n      config.headers = {\r\n        \"Content-Type\": \"application/json\",\r\n      };\r\n      // 每次请求放入token\r\n    //   config.headers.x_access_token = token\r\n      return config;\r\n    },\r\n    (error) => {\r\n      return Promise.reject(error);\r\n    }\r\n);\r\n\r\n/**\r\n * http response 响应拦截器\r\n */\r\naxios.interceptors.response.use(\r\n    (response) => {\r\n      if (response.data.errCode === 2) {\r\n        console.log(\"过期\");\r\n      }\r\n      return response;\r\n    },\r\n    (error) => {\r\n      console.log(\"请求出错：\", error);\r\n      message.warning('网络请求失败,请重试');\r\n      return Promise.reject(error)\r\n    }\r\n);\r\n\r\n\r\n/**\r\n * 查看返回的数据 可以用在get\r\n * @param url\r\n * @param params\r\n * @param data\r\n */\r\nfunction landing(url, params, data) {\r\n    if (data.code === -1) {\r\n    }\r\n}\r\n\r\n\r\n/**\r\n * 封装get方法\r\n * @param url  请求url\r\n * @param params  请求参数\r\n * @returns {Promise}\r\n */\r\nexport function get(url, params = {}) {\r\n    return new Promise((resolve, reject) => {\r\n      axios.get(url, {\r\n          params: params,\r\n        }).then((response) => {\r\n        //   landing(url, params, response.data);\r\n          resolve(response.data);\r\n        })\r\n        .catch((error) => {\r\n          reject(error);\r\n        });\r\n    });\r\n}\r\n\r\n/**\r\n * 封装post请求\r\n * @param url\r\n * @param data\r\n * @returns {Promise}\r\n */\r\n\r\nexport function post(url, data) {\r\n    return new Promise((resolve, reject) => {\r\n      axios.post(url, data).then(\r\n        (response) => {\r\n          //关闭进度条\r\n          resolve(response.data);\r\n        },\r\n        (err) => {\r\n          reject(err);\r\n        }\r\n      );\r\n    });\r\n}\r\n\r\n/**\r\n * 封装patch请求\r\n * @param url\r\n * @param data\r\n * @returns {Promise}\r\n */\r\nexport function patch(url, data = {}) {\r\n    return new Promise((resolve, reject) => {\r\n      axios.patch(url, data).then(\r\n        (response) => {\r\n          resolve(response.data);\r\n        },\r\n        (err) => {\r\n        //   msag(err);\r\n          reject(err);\r\n        }\r\n      );\r\n    });\r\n}","E:\\Github_Micro\\taro-art-frontend\\src\\index.js",[],"E:\\Github_Micro\\taro-art-frontend\\src\\pages\\user\\regbind.jsx",["76"],"E:\\Github_Micro\\taro-art-frontend\\src\\pages\\404\\index.jsx",[],"E:\\Github_Micro\\taro-art-frontend\\src\\api\\user\\index.js",[],{"ruleId":"77","severity":1,"message":"78","line":6,"column":3,"nodeType":"79","messageId":"80","endLine":6,"endColumn":7},{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","replacedBy":"84"},{"ruleId":"81","replacedBy":"85"},{"ruleId":"83","replacedBy":"86"},{"ruleId":"87","severity":1,"message":"88","line":42,"column":8,"nodeType":"89","endLine":42,"endColumn":21,"suggestions":"90"},{"ruleId":"77","severity":1,"message":"91","line":2,"column":32,"nodeType":"79","messageId":"80","endLine":2,"endColumn":43},{"ruleId":"77","severity":1,"message":"92","line":10,"column":11,"nodeType":"79","messageId":"80","endLine":10,"endColumn":18},{"ruleId":"77","severity":1,"message":"93","line":55,"column":10,"nodeType":"79","messageId":"80","endLine":55,"endColumn":17},{"ruleId":"87","severity":1,"message":"88","line":20,"column":7,"nodeType":"89","endLine":20,"endColumn":9,"suggestions":"94"},"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","no-native-reassign",["95"],"no-negated-in-lhs",["96"],["95"],["96"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["97"],"'InputNumber' is defined but never used.","'antIcon' is assigned a value but never used.","'landing' is defined but never used.",["98"],"no-global-assign","no-unsafe-negation",{"desc":"99","fix":"100"},{"desc":"101","fix":"102"},"Update the dependencies array to be: [history, loginStatus]",{"range":"103","text":"104"},"Update the dependencies array to be: [history]",{"range":"105","text":"106"},[1456,1469],"[history, loginStatus]",[710,712],"[history]"]