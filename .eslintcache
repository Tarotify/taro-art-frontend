[{"/Users/raymond/Documents/GitHub/MicroRay/taro-art-frontend/src/App.js":"1","/Users/raymond/Documents/GitHub/MicroRay/taro-art-frontend/src/pages/user/forgetpw.jsx":"2","/Users/raymond/Documents/GitHub/MicroRay/taro-art-frontend/src/components/header/index.jsx":"3","/Users/raymond/Documents/GitHub/MicroRay/taro-art-frontend/src/utils/request.js":"4","/Users/raymond/Documents/GitHub/MicroRay/taro-art-frontend/src/index.js":"5","/Users/raymond/Documents/GitHub/MicroRay/taro-art-frontend/src/pages/user/regbind.jsx":"6","/Users/raymond/Documents/GitHub/MicroRay/taro-art-frontend/src/components/footer/index.jsx":"7","/Users/raymond/Documents/GitHub/MicroRay/taro-art-frontend/src/api/user/index.js":"8","/Users/raymond/Documents/GitHub/MicroRay/taro-art-frontend/src/reportWebVitals.js":"9","/Users/raymond/Documents/GitHub/MicroRay/taro-art-frontend/src/pages/index/index.jsx":"10","/Users/raymond/Documents/GitHub/MicroRay/taro-art-frontend/src/worker/loopWorker.js":"11","/Users/raymond/Documents/GitHub/MicroRay/taro-art-frontend/src/utils/webWorker.js":"12"},{"size":1608,"mtime":1615302649663,"results":"13","hashOfConfig":"14"},{"size":8528,"mtime":1614262291760,"results":"15","hashOfConfig":"14"},{"size":7423,"mtime":1614262291758,"results":"16","hashOfConfig":"14"},{"size":2884,"mtime":1615153690315,"results":"17","hashOfConfig":"14"},{"size":500,"mtime":1614262291758,"results":"18","hashOfConfig":"14"},{"size":7854,"mtime":1614262291761,"results":"19","hashOfConfig":"14"},{"size":307,"mtime":1614262291758,"results":"20","hashOfConfig":"14"},{"size":839,"mtime":1614262291756,"results":"21","hashOfConfig":"14"},{"size":362,"mtime":1614262291761,"results":"22","hashOfConfig":"14"},{"size":2377,"mtime":1615305758730,"results":"23","hashOfConfig":"14"},{"size":726,"mtime":1615305522685,"results":"24","hashOfConfig":"14"},{"size":328,"mtime":1615305475392,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"3lvxon",{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/raymond/Documents/GitHub/MicroRay/taro-art-frontend/src/App.js",["52"],"/Users/raymond/Documents/GitHub/MicroRay/taro-art-frontend/src/pages/user/forgetpw.jsx",[],"/Users/raymond/Documents/GitHub/MicroRay/taro-art-frontend/src/components/header/index.jsx",[],"/Users/raymond/Documents/GitHub/MicroRay/taro-art-frontend/src/utils/request.js",["53"],"/Users/raymond/Documents/GitHub/MicroRay/taro-art-frontend/src/index.js",[],"/Users/raymond/Documents/GitHub/MicroRay/taro-art-frontend/src/pages/user/regbind.jsx",["54"],"import React, { useEffect, useState } from 'react'\nimport { Form, Input, Button, message} from 'antd'\nimport './reg.less'\nimport { useHistory } from \"react-router-dom\";\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\nimport { Storage, Tools } from '../../utils/tools'\nimport { userRegBind } from '../../api/user'\n\nexport default function RegBind () {\n    const [userInfo, setUserInfo] = useState(null)\n    const [step, setStep] = useState(1)\n    const history = useHistory()\n    useEffect(() => {\n        const result = Storage.getLocal('taro_user_verify')\n        if (result) {\n            setUserInfo(result)\n        }else{\n            history.replace('/')\n        }\n    },[])\n\n    const onStepOneFinish = (value) => {\n        setUserInfo({...value, ...userInfo})\n        setStep(2)\n    }\n\n    const onStepTwoFinish = (value) => {\n        const data = {...value, ...userInfo}\n        console.log(data)  \n        userRegBind(data).then(res => {\n            console.log(res)\n            if(res.status_code === 200) {\n                Tools.setToken(res.token)\n                message.success('登录成功', 2,  history.push('/'));\n            }\n        })\n    }\n\n    if (userInfo === null) {\n        return null\n    }\n    return(\n        <React.Fragment>\n            {step === 1 &&\n                <div className=\"regWrapper\">\n                    <div className=\"reg_title\">\n                        <h2>\n                            <strong>Account Binding</strong>\n                        </h2>\n                        <div className=\"reg_title_des\">Hi <b>{userInfo.name}</b> ! Please input or verify your email. </div>\n                    </div>\n                    <div className=\"reg_content\">\n                    <div className=\"regFormWrapper\">\n                            <Form\n                                name=\"email_bind\"\n                                className=\"reg-form\"\n                                initialValues={{\n                                    email: userInfo.email,\n                                }}\n                                onFinish={onStepOneFinish}\n                                >\n                                <Form.Item\n                                    name=\"email\"\n                                    rules={[\n                                        {\n                                            required: true,\n                                            message: 'Please input your Email !',\n                                        },\n                                        {\n                                            type: \"email\",\n                                            message: \"The input is not valid E-mail !\"\n                                        }\n                                    ]}\n                                >\n                                    <Input prefix={<UserOutlined className=\"site-form-item-icon\" />} size=\"large\" placeholder=\"邮箱\" />\n                                </Form.Item>\n                                <Form.Item>\n                                    <Button type=\"primary\" shape=\"round\"  size='large'  htmlType=\"submit\" className=\"reg-form-button\">\n                                        Bind\n                                    </Button>\n                                </Form.Item>\n                            </Form>\n                        </div>\n                        {/* <Divider></Divider>\n                        <div  className=\"tologin\">\n                            已有账号了？<Link to=\"/user/login\">点击这里登录</Link>\n                        </div> */}\n                    </div>\n                </div>\n            }\n            {step === 2 &&\n                <div className=\"regWrapper\">\n                    <div className=\"reg_title\">\n                        <h2>\n                            <strong>Account Binding</strong>\n                        </h2>\n                        <div className=\"reg_title_des\">Hi <b>{userInfo.name}</b> ! Please set your security. </div>\n                    </div>\n                    <div className=\"reg_content\">\n                    <div className=\"regFormWrapper\">\n                            <Form\n                                name=\"password_confirm\"\n                                className=\"reg-form\"\n                                onFinish={onStepTwoFinish}\n                                >\n                                <Form.Item\n                                    name=\"password\"\n                                    rules={[\n                                    {\n                                        required: true,\n                                        message: 'Please input your Password!',\n                                    },\n                                    {\n                                        whitespace: true,\n                                        message: 'Password cannot contain space!',\n                                    },\n                                    {\n                                        min: 6,\n                                        message: 'Password should be at least 6 characters',\n                                    },\n                                    ]}\n                                    hasFeedback\n                                >\n                                    <Input\n                                    prefix={<LockOutlined className=\"site-form-item-icon\" />}\n                                    type=\"password\"\n                                    placeholder=\"密码\"\n                                    size=\"large\"\n                                    />\n                                </Form.Item>\n                                <Form.Item\n                                    name=\"repassword\"\n                                    dependencies={['password']}\n                                    hasFeedback\n                                    rules={[\n                                      {\n                                        required: true,\n                                        message: 'Please confirm your password!',\n                                      },\n                                      ({ getFieldValue }) => ({\n                                        validator(_, value) {\n                                          if (!value || getFieldValue('password') === value) {\n                                            return Promise.resolve();\n                                          }\n                                          return Promise.reject('The two passwords that you entered do not match!');\n                                        },\n                                      }),\n                                    ]}\n                                >\n                                    <Input\n                                    prefix={<LockOutlined className=\"site-form-item-icon\" />}\n                                    type=\"password\"\n                                    placeholder=\"确认密码\"\n                                    size=\"large\"\n                                    />\n                                </Form.Item>\n                                <Form.Item>\n                                    <Button type=\"primary\" shape=\"round\"  size='large'  htmlType=\"submit\" className=\"reg-form-button\">\n                                        Confirm\n                                    </Button>\n                                </Form.Item>\n                            </Form>\n                        </div>\n                        {/* <Divider></Divider>\n                        <div  className=\"tologin\">\n                            已有账号了？<Link to=\"/user/login\">点击这里登录</Link>\n                        </div> */}\n                    </div>\n                </div>\n            }\n        </React.Fragment>\n    )\n}",["55","56"],"/Users/raymond/Documents/GitHub/MicroRay/taro-art-frontend/src/components/footer/index.jsx",["57","58","59"],"/Users/raymond/Documents/GitHub/MicroRay/taro-art-frontend/src/api/user/index.js",[],"/Users/raymond/Documents/GitHub/MicroRay/taro-art-frontend/src/reportWebVitals.js",[],"/Users/raymond/Documents/GitHub/MicroRay/taro-art-frontend/src/pages/index/index.jsx",["60","61","62","63"],"/Users/raymond/Documents/GitHub/MicroRay/taro-art-frontend/src/worker/loopWorker.js",[],"/Users/raymond/Documents/GitHub/MicroRay/taro-art-frontend/src/utils/webWorker.js",[],{"ruleId":"64","severity":1,"message":"65","line":6,"column":3,"nodeType":"66","messageId":"67","endLine":6,"endColumn":7},{"ruleId":"64","severity":1,"message":"68","line":62,"column":10,"nodeType":"66","messageId":"67","endLine":62,"endColumn":17},{"ruleId":"69","severity":1,"message":"70","line":20,"column":7,"nodeType":"71","endLine":20,"endColumn":9,"suggestions":"72"},{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","replacedBy":"76"},{"ruleId":"64","severity":1,"message":"77","line":1,"column":16,"nodeType":"66","messageId":"67","endLine":1,"endColumn":24},{"ruleId":"64","severity":1,"message":"78","line":1,"column":26,"nodeType":"66","messageId":"67","endLine":1,"endColumn":35},{"ruleId":"64","severity":1,"message":"65","line":2,"column":10,"nodeType":"66","messageId":"67","endLine":2,"endColumn":14},{"ruleId":"64","severity":1,"message":"79","line":7,"column":40,"nodeType":"66","messageId":"67","endLine":7,"endColumn":53},{"ruleId":"64","severity":1,"message":"80","line":32,"column":13,"nodeType":"66","messageId":"67","endLine":32,"endColumn":21},{"ruleId":"69","severity":1,"message":"81","line":42,"column":8,"nodeType":"71","endLine":42,"endColumn":10,"suggestions":"82"},{"ruleId":"64","severity":1,"message":"83","line":62,"column":11,"nodeType":"66","messageId":"67","endLine":62,"endColumn":15},"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'landing' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["84"],"no-native-reassign",["85"],"no-negated-in-lhs",["86"],"'useState' is defined but never used.","'useEffect' is defined but never used.","'LoginOutlined' is defined but never used.","'userInfo' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'workerInstance'. Either include it or remove the dependency array.",["87"],"'menu' is assigned a value but never used.",{"desc":"88","fix":"89"},"no-global-assign","no-unsafe-negation",{"desc":"90","fix":"91"},"Update the dependencies array to be: [history]",{"range":"92","text":"93"},"Update the dependencies array to be: [workerInstance]",{"range":"94","text":"95"},[691,693],"[history]",[1295,1297],"[workerInstance]"]